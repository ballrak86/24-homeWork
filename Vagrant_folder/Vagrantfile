MACHINES = {
:inetRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
                ]
  },

  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
                   {ip: '192.168.2.1', adapter: 6, netmask: "255.255.255.0", virtualbox__intnet: "ofc1-dev-net"},
                ]
  },

  :office1Router1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.2.2', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "ofc1-dev-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "test-lan-vlan10"},
                ]
  },
  :office1Router2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.2.3', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "ofc1-dev-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "test-lan-vlan20"},
                ]
  },

  :testClient1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "test-lan-vlan10"},
                ]
  },
  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "test-lan-vlan10"},
                ]
  },

  :testClient2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "test-lan-vlan20"},
                ]
  },
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "test-lan-vlan20"},
                ]
  },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        config.vm.provision "ansible" do |ansible|
#          ansible.verbose = "vvv"
          ansible.playbook = "provisioning/playbook.yml"
          ansible.become = "true"
        end

    end

  end

end
